[project]
name = "PyMRItools"
version = "2024.0.0"
description = "Toolbox for all things MRI with python. Sequence Programming, Reconstruction, Simulation, Analysis."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
#keywords = []
authors = [
  {email = "jochen.schmidt@tuta.io"},
  {name = "Jochen Schmidt"}
]
maintainers = [
  {name = "Jochen Schmidt", email = "jochen.schmidt@tuta.io"},
  {name = "Patrick Scheibe", email = "patrick@halirutan.de"}
]
#classifiers = [
#  "Development Status :: 4 - Beta",
#  "Programming Language :: Python"
#]

dependencies = [
  "plotly",
  "tqdm",
  "numpy",
  "scipy",
  "pytorch",
  "torchvision",
  "torchaudio",
  "pytorch-cuda >= 12.4",
  "simple-parsing",
  "polars",
  "niabbel"
]

#[project.optional-dependencies]
#test = [
#  "pytest < 5.0.0",
#  "pytest-cov[all]"
#]

[project.urls]
#homepage = "https://example.com"
#documentation = "https://readthedocs.org"
repository = "https://github.com/schmidt-jo/PyMRItools"
#changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[project.scripts]

emc_simulation = "pymritools.simulation.emc.core.simulate:main"

processing_unring = "pymritools.processing.unringing.gibbs_unr:main"
processing_denoise_mppca = "pymritools.processing.denoising.mppca.denoise:main"

#[project.entry-points."pymritools.magical"]
#tomatoes = "pymritools:main_fancypantsy"